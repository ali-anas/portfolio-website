@import './fonts.scss';
@import './tabbedLayoutSection.scss';

$breakpoints: (
  xxs: 296px,
  xs: 576px,
  sm: 768px,
  md: 992px,
  lg: 1200px
);

@mixin respond-above($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin respond-below($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin respond-between($lower, $upper) {

  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {

    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);

    // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }
  
  // If one or both of the breakpoints don't exist.
  } @else {

    // If lower breakpoint is invalid.
    @if (map-has-key($breakpoints, $lower) == false) {

      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($breakpoints, $upper) == false) {

      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}


body {
	-webkit-box-sizing: border-box;
   	box-sizing: border-box;
   	min-width: 250px;
   	padding: 20px;
   	width: 100%;
	font-family: 'ProductSans', sans-serif;
	letter-spacing: 0.04em;
	padding: 56px 0px 0px 0px;
	z-index: 0;
    color: #585754;
    background-color: #d5d0c0;
    height: 100%;
    margin: 0;
}

.navbar {
	font-family: 'OpenSans',sans-serif;
	font-weight: bold;
	background-color: #8c1515;
	color: #FFFFFF;
}

.row {
	margin-right: 0;
}

.col, .col-1, .col-10, .col-11, .col-12, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-auto, .col-lg, .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-auto, .col-md, .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-auto, .col-sm, .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-auto, .col-xl, .col-xl-1, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-auto {
	padding-right: 0px;
}


.container {
	margin-right: auto;
	margin-left: auto;
}

.navbar .container, .container{
    padding: 0 1.125em;
}

container, .navbar-static-top .container, .navbar-fixed-top .container, .navbar-fixed-bottom .container {
    width: 940px;
}

@include respond-below(sm) {
	#tabbedLayoutContainer>.container {
		padding: 0;
		width: 100%;
	}
}

@include respond-between(sm, md) {
	.container {
		width: auto;
	}
}

@include respond-above(lg) {
	#tabbedLayoutContainer>.container, .navbar-static-top .container, .navbar-fixed-top .container, .navbar-fixed-bottom .container {
	    width: 1170px;
	}

	#masterHeadContainer>div.container, .navbar-static-top .container, .navbar-fixed-top .container, .navbar-fixed-bottom .container {
	    width: 1170px;
	}
}

.nameAndTitle {
	font-family: 'ProductSans',sans-serif;
	padding: 0px 0px;
	margin: 0px 0px;
	margin: 0 0.9375em 0.9375em 0;
}

.icons-list {
	font-family: 'Roboto', sans-serif;
	padding: 0px 0px;
	margin: 0px 0px;
	/*margin: 0 0.9375em 0.9375em 0.9375em;*/
}

.image-container {
    webkit-box-shadow: 0 0 0.3125em rgba(0, 0, 0, 0.5);
    -moz-box-shadow: 0 0 0.3125em rgba(0, 0, 0, 0.5);
    margin: 0 0.9375em 0.9375em 0.9375em;
    background-size: 7.8125em 7.8125em;
    float: left;
}

img {
	width: 7.8125em;
    height: 7.8125em;
    box-shadow: 0 0 0.3125em rgba(0, 0, 0, 0.5);
    border-radius: 50%;
}

.banner.profile .icon-background {
    background-color: rgba(255, 255, 255, 0.2);
}

.icons-list ul {
	display: flex;
	flex-wrap: wrap;
}

.icons-list ul li{
	margin: 0 10px 10px 10px;
}

@include respond-below(sm) {
	.icons-list ul li{
		margin: 0 5px 5px 5px;
	}
}

.icon-background {
    width: 1.5625em;
    height: 1.5625em;
    border-radius: 50%;
    margin: 0 0 0.18375 0;
    text-align: center;
    padding: 0 0 0 2px;
}

a {
	text-decoration:none;
}

.icon-container {
	font-weight: light;
    letter-spacing: 0.08333em;
    line-height: 125%;
    text-shadow: 0 0 0.83333em rgba(0, 0, 0, 0.5);
    text-transform: uppercase;
    color: #fff;

    .fa {
    	padding-top: 4px;
    }

    .icon-text {
    	font-size: 0.75em;
    	padding-left: 0.5em;
    	padding-top: 4px;
    	margin-bottom: 0;
    	color: rgba(255, 255, 255, 0.7);
    }

    .icon-text:hover {
    	color: #fff;
    }

}



.banner {
	background-image: url(../img/collonade.jpg);
    background-size: cover;
    -webkit-box-shadow: 0 0.1875em 0.1875em rgba(0, 0, 0, 0.2);
    -moz-box-shadow: 0 0.1875em 0.1875em rgba(0, 0, 0, 0.2);
    box-shadow: 0 0.1875em 0.1875em rgba(0, 0, 0, 0.2);
    background-position: center;
    padding: 1.25em 0 1.25em 0;

}

.banner .profile {
    color: white;
    padding-bottom: 1.25em;
    margin-bottom: 0;
}

@include respond-above(sm) {
    .banner.profile {
    	margin-bottom: 1.875em;
	}
}

@include respond-above(sm) {
   	.banner {
    	border-bottom: 1px solid rgba(0, 0, 0, 0.15);
    }
}


div {
	display: block;
}

section {
    display: block;
}


.nameAndTitle {
	h1 {
	    font-size: 1.25em;
	    letter-spacing: 0.04333em;
	    line-height: 100%;
	    margin: 0 0 0.17857em 0;
	    font-weight: bold;
	    text-shadow: 0 0 0.35714em rgba(0, 0, 0, 0.5);
	    color: #fff;
	}

	h2 {
		font-family: 'Roboto', sans-serif;
		font-size: 0.75em;
		font-weight: 500;
	    letter-spacing: 0.08333em;
	    line-height: 125%;
	    text-shadow: 0 0 0.83333em rgba(0, 0, 0, 0.5);
	    margin-bottom: 0.83333em;
	    text-transform: uppercase;
	    color: #fff;
	}

	@include respond-above(sm) {
	  h1 {
	    font-size: 2.25em;
	  }
	}

	@include respond-above(sm) {
		h2 {
			font-size: 0.875em;
		}
	}
}


@include respond-above(sm) {
	.icon-container.icon-text {
		font-size: 0.875em;
	}
}

@include respond-below(xxs) {
  .nameAndTitle {
    text-align: center;
  }
}


@include respond-above(sm) {
	.nameAndTitle {
		margin: 1.875em 1.875em 1.875em 0;
	}
}

@include respond-above(sm) {
	.icons-list {
		margin: 1.875em 0 1.875em 0;
	}
}


@include respond-above(sm) {
	.image-container {
		margin: 1.875em 1.875em 1.875em 1.875em;
	    background-size: 9.375em 9.375em;
	}
}

@include respond-above(sm) {
	img {
		width: 9.375em;
	    height: 9.375em;
	}
}

@include respond-below(xxs) {
	.image-container {
		padding: 0px 50px;
		margin-left: auto;
		margin-right: auto;
	}
}


@include respond-above(md) {
	.container, .container-lg, .container-md, .container-sm {
    	max-width: 100%;
	}
}

@include respond-above(sm) {
	.container, .container-md, .container-sm {
	    max-width: 100%;
	}
}

@include respond-above(xs) {
	.container, .container-sm {
	    max-width: 100%;
	}
}


@import './portfolio.scss';
@import './footer.scss';
@import './skills.scss';